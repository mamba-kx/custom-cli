var __create = Object.create;
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __getProtoOf = Object.getPrototypeOf;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __markAsModule = (target) => __defProp(target, "__esModule", { value: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __reExport = (target, module2, copyDefault, desc) => {
  if (module2 && typeof module2 === "object" || typeof module2 === "function") {
    for (let key of __getOwnPropNames(module2))
      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== "default"))
        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });
  }
  return target;
};
var __toESM = (module2, isNodeMode) => {
  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, "default", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);
};
var __toCommonJS = /* @__PURE__ */ ((cache) => {
  return (module2, temp) => {
    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);
  };
})(typeof WeakMap !== "undefined" ? /* @__PURE__ */ new WeakMap() : 0);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  default: () => src_default
});
var import_fs = __toESM(require("fs"));
var import_path = __toESM(require("path"));
var import_magic_string = __toESM(require("magic-string"));
var src_default = () => {
  const shebangs = /* @__PURE__ */ new Map();
  const shebangRe = /^\s*(#!.*)/;
  const outputFiles = /* @__PURE__ */ new Set();
  return {
    name: "hashbang",
    transform(code, id) {
      let match;
      if (match = shebangRe.exec(code)) {
        shebangs.set(id, match[1]);
        const str = new import_magic_string.default(code);
        str.remove(match.index, match[1].length);
        return {
          code: str.toString(),
          map: str.generateMap({ hires: true })
        };
      }
      return null;
    },
    renderChunk(code, { isEntry, facadeModuleId, fileName }, { file, dir, sourcemap }) {
      if (!isEntry || !facadeModuleId || !shebangs.has(facadeModuleId))
        return;
      outputFiles.add(file || import_path.default.resolve(dir || process.cwd(), fileName));
      const s = new import_magic_string.default(code);
      s.prepend(shebangs.get(facadeModuleId) + "\n");
      return {
        code: s.toString(),
        map: sourcemap ? s.generateMap({ hires: true }) : void 0
      };
    },
    async writeBundle() {
      await Promise.all([...outputFiles].map(async (file) => {
        await import_fs.default.promises.chmod(file, 493 & ~process.umask());
      }));
    }
  };
};
module.exports = __toCommonJS(src_exports);
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {});
